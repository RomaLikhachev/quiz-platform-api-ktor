openapi: 3.1.0

info:
  title: Quiz-Platform API
  description: |-
    The Quiz-Platform API provides access to the Unified State Exam/Overview codifier and generates theory for themes based on the Yandex GPT API.
  termsOfService: https://yugyd.com/terms/
  contact:
    email: yugydyur@gmail.com
  license:
    name: Apache 2.0
    url: https://github.com/Yugyd/quiz-platform-api-ktor/blob/main/LICENSE.txt
  version: 1.0.0

servers:
  - url: https://quizplatform.yugyd.com/api/v1

tags:
  - name: theme
    description: Theme data

paths:
  /theme/themes:
    post:
      tags:
        - theme
      summary: List of themes
      description: Return a list of themes by subject
      operationId: getThemes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ThemeRequestBody'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Theme'
        '400':
          description: Invalid content field
        '404':
          description: Themes not found
        '500':
          description: Internal server error. Example, failed to retrieve data

  /theme/detail/{themeId}:
    get:
      tags:
        - theme
      summary: Theme details
      description: Return theme by ID
      operationId: getThemesById
      parameters:
        - name: themeId
          in: path
          description: The theme ID to get
          required: true
          schema:
            type: integer
            format: int64
            examples: [ 1 ]
        - name: recreate
          in: query
          description: 'Generate new content via AI or return cached content'
          required: false
          schema:
            type: boolean
            examples: [ false ]
        - name: X-Ai-Key
          in: header
          description: 'AI API access key. Required if recreate=true'
          required: false
          schema:
            type: string
        - name: X-Ai-Folder
          in: header
          description: 'The directory in which the AI model is located. Required if recreate=true and aiProvider=yandex'
          required: false
          schema:
            type: string
        - name: X-Ai-Provider
          in: header
          description: 'Provider that provides access to AI. Required if recreate=true'
          required: false
          schema:
            type: string
            enum:
              - yandex
              - openai
            examples: [ "yandex" ]
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThemeDetail'
        '400':
          description: Invalid themeId field
        '404':
          description: Theme not found
        '500':
          description: Internal server error. Example, failed to retrieve data

components:
  schemas:
    ThemeRequestBody:
      type: object
      required:
        - content
      properties:
        content:
          type: string
          description: Content type
          examples: [ history ]
          enum:
            - history
        parentThemeId:
          type: string
          format: int64
          description: Parent theme id
          examples: [ 1 ]

    Theme:
      type: object
      required:
        - id
        - name
        - description
        - detail
      properties:
        id:
          type: integer
          format: int64
          examples: [ 1 ]
        name:
          type: string
          examples: [ Antiquity and Middle Ages ]
        description:
          type: string
          examples: [ The formation of feudal power ]
        iconUrl:
          type: string
          examples: [ https://yugyd.com/test.png ]
        detail:
          type: boolean
          examples: [ true ]
    ThemeDetail:
      type: object
      required:
        - id
        - name
        - description
        - detail
        - content
      properties:
        id:
          type: integer
          format: int64
          examples: [ 1 ]
        name:
          type: string
          examples: [ Antiquity and Middle Ages ]
        description:
          type: string
          examples: [ The formation of feudal power ]
        iconUrl:
          type: string
          examples: [ https://yugyd.com/test.png ]
        detail:
          type: boolean
          examples: [ true ]
        content:
          type: string
          description: Content in MD format
          examples: [ MD content ]

  securitySchemes:
    api_key:
      type: apiKey
      name: api_key
      in: header
